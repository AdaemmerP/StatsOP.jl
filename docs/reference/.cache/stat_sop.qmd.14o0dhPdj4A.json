{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "engine: julia\n",
                "---\n",
                "\n",
                "# stat_sop {#sec-doc}\n",
                "    \n",
                "\n",
                "::: {.callout-note appearance=\"simple\" title=\"docblock\" collapse=false}    \n",
                "\n",
                "function stat*sop(     data::Union{SubArray,Array{T,2}}, d1::Int, d2::Int;     chart*choice=3, add_noise::Bool=false ) where {T<:Real}\n",
                " \n",
                "Computes the test statistic for a single picture and chosen test statistic.  `chart_coice` is an integer value for the chart choice. The options are 1-4.\n",
                " \n",
                "\n",
                "### Examples\n",
                "    \n",
                "\n",
                "```{julia-repl}\n",
                "#| eval: false\n",
                "data = rand(20, 20);\n",
                "\n",
                "stat_sop(data, 2)\n",
                "\n",
                "```\n",
                "\n",
                "\n",
                "\n",
                ":::\n",
                "    \n",
                "\n",
                " --- \n",
                " \n",
                "::: {.callout-note appearance=\"simple\" title=\"docblock\" collapse=false}    \n",
                "\n",
                "stat*sop(data::Array{Float64, 3}, add*noise::Bool, lam::Float64, chart_choice::Int)\n",
                " \n",
                "Computes the test statistic for a 3D array of data, a given lambda value, and a given chart choice.  The input parameters are:\n",
                " \n",
                "  * `data::Array{Float64,3}`: A 3D array of data.\n",
                "  * `add_noise::Bool`: A boolean value whether to add noise to the data. This is\n",
                "necessary when the matrices consist of count data.\n",
                " \n",
                "  * `lam::Float64`: A scalar value for lambda.\n",
                "  * `chart_choice::Int`: An integer value for the chart choice. The options are 1-4.\n",
                "\n",
                "### Examples\n",
                "    \n",
                "\n",
                "```{julia-repl}\n",
                "#| eval: false\n",
                "data = rand(20, 20, 10);\n",
                "lam = 0.1;\n",
                "chart_choice = 2;\n",
                "\n",
                "stat_sop(data, false, lam, chart_choice)\n",
                "\n",
                "```\n",
                "\n",
                "\n",
                "\n",
                ":::\n",
                ""
            ]
        }
    ],
    "timestamp": "2025-10-19T15:27:08.799",
    "file": "/home/adaemmerp/Dropbox/Greifswald/Forschung/Mit_PWitten_CWeiss/StatsOP/docs/reference/stat_sop.qmd",
    "qnr_schema_version": "1.0.0"
}