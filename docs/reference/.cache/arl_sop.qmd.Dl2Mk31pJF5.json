{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "engine: julia\n",
                "---\n",
                "\n",
                "# arl_sop {#sec-doc}\n",
                "    \n",
                "\n",
                "::: {.callout-note appearance=\"simple\" title=\"docblock\" collapse=false}    \n",
                ""
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| eval: false\n",
                "arl_sop(lam, cl, sop_dgp::ICSP, d1::Int, d2::Int, reps=10_000; chart_choice=3)\n",
                ""
            ],
            "outputs": [
            ],
            "execution_count": 0
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "Compute the average run length (ARL) for a given in-control spatial DGP. \n",
                " \n",
                "The input parameters are:\n",
                " \n",
                "  * `lam::Float64`: A scalar value for lambda for the EWMA chart.\n",
                "  * `cl::Float64`: A scalar value for the control limit.\n",
                "  * `sop_dgp::ICSP`: A struct for the in-control spatial DGP.\n",
                "  * `d1::Int`: An integer value for the first delay (d₁).\n",
                "  * `d2::Int`: An integer value for the second delay (d₂).\n",
                "  * `reps::Int`: An integer value for the number of repetitions. The default value is 10,000.\n",
                "  * `chart_choice::Int`: An integer value for the chart choice. The options are 1-4.\n",
                "The default value is 3.\n",
                " \n",
                "\n",
                "\n",
                ":::\n",
                "    \n",
                "\n",
                " --- \n",
                " \n",
                "::: {.callout-note appearance=\"simple\" title=\"docblock\" collapse=false}    \n",
                ""
            ]
        },
        {
            "id": "4",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| eval: false\n",
                "arl_sop(lam, cl, p_mat::Array{Float64,2}, reps=10_000)\n",
                ""
            ],
            "outputs": [
            ],
            "execution_count": 0
        },
        {
            "id": "5",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "Compute the average run length (ARL) using a bootstrap approach  for a particular delay (d₁-d₂) combination. \n",
                " \n",
                "The input parameters are:\n",
                " \n",
                "  * `lam::Float64`: A scalar value for lambda for the EWMA chart.\n",
                "  * `cl::Float64`: A scalar value for the control limit.\n",
                "  * `p_mat::Array{Float64,2}`: A matrix with the relative frequencies for a particular\n",
                "delay (d₁-d₂) combination. This matrix will be used for re-sampling. The matrix has to be  computed by `compute_p_array()`.\n",
                " \n",
                "  * `reps::Int`: An integer value for the number of repetitions. The default value is 10,000.\n",
                "\n",
                "\n",
                ":::\n",
                "    \n",
                "\n",
                " --- \n",
                " \n",
                "::: {.callout-note appearance=\"simple\" title=\"docblock\" collapse=false}    \n",
                ""
            ]
        },
        {
            "id": "6",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| eval: false\n",
                "arl_sop(lam, cl, p_array::Array{Float64,3}, reps=10_000; chart_choice=3)\n",
                ""
            ],
            "outputs": [
            ],
            "execution_count": 0
        },
        {
            "id": "7",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "Compute the average run length for the BP-EWMA-SOP for a given control limit    using bootstraping instead of a theoretical in-control distribution.\n",
                " \n",
                "The input parameters are:\n",
                " \n",
                "  * `lam::Float64`: A scalar value for lambda for the EWMA chart.\n",
                "  * `cl::Float64`: A scalar value for the control limit.\n",
                "  * `p_array::Array{Float64, 3}`: A 3D array with the with the relative frequencies\n",
                "of each d1-d2 (delay) combination. The first dimension (rows) is the picture, the  second dimension refers to the patterns group (s₁, s₂, or s₃) and the third dimension  denotes each d₁-d₂ combination. This matrix will be used for re-sampling.\n",
                " \n",
                "  * `reps::Int`: An integer value for the number of repetitions.\n",
                "  * `chart_choice::Int`: An integer value for the chart choice. The options are 1-4.\n",
                "\n",
                "\n",
                ":::\n",
                "    \n",
                "\n",
                " --- \n",
                " \n",
                "::: {.callout-note appearance=\"simple\" title=\"docblock\" collapse=false}    \n",
                ""
            ]
        },
        {
            "id": "8",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| eval: false\n",
                " arl_sop(\n",
                ""
            ],
            "outputs": [
            ],
            "execution_count": 0
        },
        {
            "id": "9",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "lam, cl, spatial*dgp::SpatialDGP, d1::Int, d2::Int, reps=10*000; chart_choice=3 )\n",
                " \n",
                "Compute the average run length (ARL) for a given out-of-control spatial DGP. \n",
                " \n",
                "The input parameters are:\n",
                " \n",
                "  * `lam::Float64`: A scalar value for lambda for the EWMA chart.\n",
                "  * `cl::Float64`: A scalar value for the control limit.\n",
                "  * `spatial_dgp::SpatialDGP`: A struct for the out-of-control spatial DGP.\n",
                "  * `d1::Int`: An integer value for the first delay (d₁).\n",
                "  * `d2::Int`: An integer value for the second delay (d₂).\n",
                "  * `reps::Int`: An integer value for the number of repetitions. The default value is 10,000.\n",
                "  * `chart_choice::Int`: An integer value for the chart choice. The options are 1-4.\n",
                "The default value is 3.\n",
                " \n",
                "\n",
                "\n",
                ":::\n",
                ""
            ]
        }
    ],
    "timestamp": "2025-10-19T15:28:33.785",
    "file": "/home/adaemmerp/Dropbox/Greifswald/Forschung/Mit_PWitten_CWeiss/StatsOP/docs/reference/arl_sop.qmd",
    "qnr_schema_version": "1.0.0"
}