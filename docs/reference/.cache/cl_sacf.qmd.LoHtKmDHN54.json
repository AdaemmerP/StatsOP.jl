{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "engine: julia\n",
                "---\n",
                "\n",
                "# cl_sacf {#sec-doc}\n",
                "    \n",
                "\n",
                "::: {.callout-note appearance=\"simple\" title=\"docblock\" collapse=false}    \n",
                ""
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| eval: false\n",
                "cl_sacf(\n",
                "  sp_dgp::ICSTS, lam, L0, cl_init, d1::Int, d2::Int, reps=10_000;\n",
                ""
            ],
            "outputs": [
            ],
            "execution_count": 0
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "jmin=4, jmax=6, verbose=false     )\n",
                " \n",
                "Compute the control limit for the exponentially weighted moving average (EWMA)  control chart for one delay (d₁-d₂) combination, using the spatial autocorrelation  function (SACF) and an in-control spatial process (ICSP). \n",
                " \n",
                "The function returns the control limit for a given average run.\n",
                " \n",
                "  * `sp_dgp`: The in-control spatial process (ICSP) to use for the control limit.\n",
                "  * `lam`: The smoothing parameter for the EWMA control chart.\n",
                "  * `L0`: The average run length (ARL) to use for the control limit.\n",
                "  * `cl_init`: The initial control limit to use for the control limit.\n",
                "  * `d1`: The first (row) delay for the spatial process.\n",
                "  * `d2`: The second (column) delay for the spatial process.\n",
                "  * `reps`: The number of repetitions to use for the control limit.\n",
                "  * `jmin`: The minimum number of values to change after the decimal point in the control limit.\n",
                "  * `jmax`: The maximum number of values to change after the decimal point in the control limit.\n",
                "  * `verbose`: A boolean to indicate whether to print the control limit and ARL for each iteration."
            ]
        },
        {
            "id": "4",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| eval: false\n",
                "#--- Example\n",
                "# Parameters\n",
                "lam = 0.1\n",
                "L0 = 370\n",
                "sp_dgp = ICSP(20, 20, Normal(0, 1))\n",
                "cl_init = 0.5\n",
                "d1 = 1\n",
                "d2 = 1\n",
                "reps = 10_000\n",
                "jmin = 4\n",
                "jmax = 6\n",
                ""
            ],
            "outputs": [
            ],
            "execution_count": 0
        },
        {
            "id": "5",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "\n",
                "\n",
                ":::\n",
                ""
            ]
        }
    ],
    "timestamp": "2025-10-19T15:27:19.213",
    "file": "/home/adaemmerp/Dropbox/Greifswald/Forschung/Mit_PWitten_CWeiss/StatsOP/docs/reference/cl_sacf.qmd",
    "qnr_schema_version": "1.0.0"
}